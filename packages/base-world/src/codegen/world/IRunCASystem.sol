// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

/* Autogenerated file. Do not edit manually. */

import { VoxelEntity, VoxelCoord, EntityEventData } from "@tenet-utils/src/Types.sol";

interface IRunCASystem {
  function enterCA(
    address caAddress,
    VoxelEntity memory entity,
    bytes32 voxelTypeId,
    bytes4 mindSelector,
    VoxelCoord memory coord
  ) external;

  function moveCA(
    address caAddress,
    VoxelEntity memory newEntity,
    bytes32 voxelTypeId,
    VoxelCoord memory oldCoord,
    VoxelCoord memory newCoord
  ) external;

  function exitCA(address caAddress, VoxelEntity memory entity, bytes32 voxelTypeId, VoxelCoord memory coord) external;

  function activateCA(address caAddress, VoxelEntity memory entity) external;

  function runCA(
    address caAddress,
    VoxelEntity memory entity,
    bytes4 interactionSelector
  ) external returns (EntityEventData[] memory);

  function updateVariant(address caAddress, VoxelEntity memory entity) external;
}
